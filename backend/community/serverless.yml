service: community-service

provider:
  name: aws
  runtime: nodejs20.x
  region: ${env:REGION}
  environment:
    DYNAMODB_TABLE: ${env:METADATA_TABLE}
    REGION: ${aws:region}
    ALLOWED_ORIGIN: ${env:ALLOWED_ORIGIN}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
            - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.DYNAMODB_TABLE}/index/*"
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: "*"

functions:
  createPost:
    handler: service/createPost.handler
    events:
      - http:
          path: /{boardType}
          method: POST
          cors: true

  getPost:
    handler: service/getPost.handler
    events:
      - http:
          path: /{boardType}/{postId}
          method: GET
          cors: true

  listPosts:
    handler: service/listPosts.handler
    events:
      - http:
          path: /{boardType}
          method: GET
          cors: true

  updatePost:
    handler: service/updatePost.handler
    events:
      - http:
          path: /{boardType}/{postId}
          method: PUT
          cors: true

  deletePost:
    handler: service/deletePost.handler
    events:
      - http:
          path: /{boardType}/{postId}
          method: DELETE
          cors: true

  createComment:
    handler: service/createComment.handler
    events:
      - http:
          path: /{boardType}/{postId}
          method: POST
          cors: true

  getComment:
    handler: service/getComment.handler
    events:
      - http:
          path: /{boardType}/{postId}/comments
          method: GET
          cors: true

  updateComment:
    handler: service/updateComment.handler
    events:
      - http:
          path: /{boardType}/{postId}/comments
          method: PUT
          cors: true

  deleteComment:
    handler: service/deleteComment.handler
    events:
      - http:
          path: /{boardType}/{postId}/comments
          method: DELETE
          cors: true

resources:
  Resources:
    EsquadPostsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
          - AttributeName: boardType
            AttributeType: S
          - AttributeName: resolved
            AttributeType: S
          - AttributeName: recruitStatus
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: BoardIndex
            KeySchema:
              - AttributeName: boardType
                KeyType: HASH
              - AttributeName: SK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: board-resolved-create-index
            KeySchema:
              - AttributeName: resolved
                KeyType: HASH
              - AttributeName: SK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: board-recruited-create-index
            KeySchema:
              - AttributeName: recruitStatus
                KeyType: HASH
              - AttributeName: SK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        SSESpecification:
          SSEEnabled: true

useDotenv: true

plugins:
  - serverless-dotenv-plugin
